{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-dispatch/src/index.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/array.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/selectChild.js","../node_modules/d3-selection/src/selection/selectChildren.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/join.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/iterator.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-selection/src/create.js","../node_modules/d3-selection/src/local.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/pointer.js","../node_modules/d3-selection/src/pointers.js","../node_modules/d3-selection/src/selectAll.js","../node_modules/d3-selection/src/index.js","../node_modules/d3-drag/src/noevent.js","../node_modules/d3-drag/src/nodrag.js","../node_modules/d3-drag/src/constant.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-drag/src/index.js","d3.ts","../node_modules/events/events.js","editor.ts","styles.ts","flow-element.ts","pallette-element.ts","registry.ts","config-element.ts","index.ts"],"names":["dispatch","noop","value","t","i","n","arguments","length","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","get","c","set","callback","concat","push","prototype","constructor","on","typename","T","copy","call","that","args","Array","apply","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","none","selector","querySelector","select","groups","_groups","m","subgroups","j","node","subnode","group","subgroup","__data__","Selection","_parents","x","from","empty","querySelectorAll","arrayAll","parents","matches","childMatcher","find","childFind","match","children","childFirst","firstElementChild","filter","childrenFilter","selectAll","update","_enter","sparse","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","bindIndex","enter","exit","data","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","Map","keyValues","has","delete","bind","enterGroup","updateGroup","previous","i0","i1","_exit","onenter","onupdate","onexit","append","remove","merge","order","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","compareDocumentPosition","parentNode","compare","compareNode","a","b","ascending","sortgroups","sortgroup","sort","NaN","size","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","getAttributeNS","getAttribute","each","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","contains","join","splice","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","firstChild","create","constantNull","before","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","deep","property","contextListener","listener","event","onRemove","__on","o","removeEventListener","options","onAdd","addEventListener","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","root","selection_selection","selection_select","selection_selectAll","selectChild","selection_selectChild","selectChildren","selection_selectChildren","selection_filter","selection_data","selection_enter","selection_exit","selection_join","selection_merge","selection_order","selection_sort","selection_call","nodes","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attr","selection_attr","selection_style","selection_property","classed","selection_classed","text","selection_text","html","selection_html","selection_raise","selection_lower","selection_append","insert","selection_insert","selection_remove","selection_clone","selection_datum","selection_on","selection_dispatch","Symbol","iterator","selection_iterator","nextId","Local","toString","id","sourceEvent","undefined","currentTarget","ownerSVGElement","createSVGPoint","point","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","rect","left","clientLeft","top","clientTop","pageX","pageY","events","target","touches","nopropagation","stopImmediatePropagation","preventDefault","view","noevent","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","DragEvent","subject","identifier","active","dx","dy","Object","defineProperties","enumerable","configurable","defaultFilter","ctrlKey","button","defaultContainer","defaultSubject","d","defaultTouchable","navigator","maxTouchPoints","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","mouse","changedTouches","clearTimeout","touch","s","p","p0","clickDistance","sqrt","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ProcessEmitWarning","warning","console","warn","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","EventEmitter","init","module","exports","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","TypeError","_getMaxListeners","_addListener","prepend","existing","newListener","emit","unshift","warned","w","String","emitter","count","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","spliceOne","index","pop","ret","Promise","resolve","reject","eventListener","errorListener","err","defineProperty","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","handler","len","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","keys","rawListeners","eventNames"],"mappings":"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","file":"src.c5e6a824.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                      (node as Element).matches ?\n                  (node as Element).matches(selector) :\n                  legacyMatches.call(node as Element, selector));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultOrNative|CSSResultArray;\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultOrNative|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./dispatch.js\";\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator.js\";\nimport select from \"./select.js\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","import pointer from \"./pointer.js\";\nimport sourceEvent from \"./sourceEvent.js\";\n\nexport default function(events, node) {\n  if (events.target) { // i.e., instanceof Event, not TouchList or iterable\n    events = sourceEvent(events);\n    if (node === undefined) node = events.currentTarget;\n    events = events.touches || [events];\n  }\n  return Array.from(events, event => pointer(event, node));\n}\n","import array from \"./array.js\";\nimport {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : array(selector)], root);\n}\n","export {default as create} from \"./create.js\";\nexport {default as creator} from \"./creator.js\";\nexport {default as local} from \"./local.js\";\nexport {default as matcher} from \"./matcher.js\";\nexport {default as namespace} from \"./namespace.js\";\nexport {default as namespaces} from \"./namespaces.js\";\nexport {default as pointer} from \"./pointer.js\";\nexport {default as pointers} from \"./pointers.js\";\nexport {default as select} from \"./select.js\";\nexport {default as selectAll} from \"./selectAll.js\";\nexport {default as selection} from \"./selection/index.js\";\nexport {default as selector} from \"./selector.js\";\nexport {default as selectorAll} from \"./selectorAll.js\";\nexport {styleValue as style} from \"./selection/style.js\";\nexport {default as window} from \"./window.js\";\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default x => () => x;\n","export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {select, pointer} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // nobreak\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export {default as drag} from \"./drag.js\";\nexport {default as dragDisable, yesdrag as dragEnable} from \"./nodrag.js\";\n","import { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\n\n// only expose what we use\nexport default {\n    drag,\n    select,\n    pointer\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","import { EventEmitter } from 'events';\n\nimport { NodeRegistry } from './registry';\nimport d3 from './d3';\nimport { Selection } from 'd3-selection';\n\n// flow is an array of nodes\nexport interface Node {\n  name: string,\n  type: string,\n  id: string,\n  x: number,\n  y: number,\n  wires: [string[]?]\n};\n\ninterface Wire {\n  fromNode:string,\n  fromPort: number,\n  toNode:string\n}\n\nexport class FlowEditor extends EventEmitter {\n\n  private registry: NodeRegistry;\n  private flow: Node[];           // array of nodes and wires\n  private flowWires: Wire[];      // wires list derived from flow on update\n\n  private svg;       // passed in svg\n  private wires;     // wires group    \n  private nodes;     // nodes group\n\n  private dragLine;               // line for dragging\n\n  private mouseDownNode: {        // node and port during connector drag\n    node: Node,\n    port: number,\n    coords: { x:number, y:number }\n  };  \n\n  private selectedLink: string;   // id of currently selected link\n  private selectedNode: string;   // currently selected node\n\n  constructor(registry: NodeRegistry, svg: Selection<SVGSVGElement, unknown, null, undefined>) {\n    super();\n    this.registry = registry;\n    this.svg = svg;\n  }\n\n  /**\n   * Initialize the editor with the flow to edit\n   *\n   * @param flow\n   */\n  init(flow) {\n    this.flow = flow;\n\n    // handle dragging line, resetting selection, deleting lines and nodes\n    this.svg\n      .on('mousemove', (event: any) => {\n        if (!this.mouseDownNode) return;\n        let sourceX = this.mouseDownNode.coords.x;\n        let sourceY = this.mouseDownNode.coords.y;\n        let targetX = d3.pointer(event)[0];\n        let targetY = d3.pointer(event)[1];\n        this.dragLine.attr('d', `M ${sourceX} ${sourceY} C ${sourceX+50} ${sourceY}, ${targetX-50} ${targetY}, ${targetX},${targetY}`);\n      })\n      .on('mouseup', () => {\n        if (this.mouseDownNode) {\n          this.mouseDownNode = null;\n          this.dragLine\n            .classed('hidden',true)\n            .attr('d', 'M0,0L0,0');\n        }\n      })\n      .on('click', () => {\n        this.resetSelection();\n      })\n      .on('keydown', (event: any) => {\n        event.stopPropagation();\n        if (event.key === 'Delete' || event.key === 'Backspace') {\n          if (this.selectedNode) {\n            let nodeId = this.selectedNode.replace('node-','');\n  \n            // remove all the wires to the node, and the node\n            this.flow = this.flow.reduce((result, node) => {\n                if (node.id !== nodeId) {\n                  for (let i in node.wires) {\n                    node.wires[i] = node.wires[i].filter((id) => id !== nodeId);\n                  }\n                  result.push(node)\n                }\n                return result;\n              },[]);\n            this.selectedNode = null;\n            this.updateFlow();\n          }\n          if (this.selectedLink) {\n            let [prefix, fromNode, port, toNode ] = this.selectedLink.split('-');\n  \n            // remove that wire from the node\n            for (let node of this.flow) {\n              if (node.id === fromNode) {\n                let portNum = parseInt(port);\n                node.wires[portNum] = node.wires[portNum].filter( nodeId => nodeId !== toNode);\n              }\n            }\n            this.selectedLink = null;\n            this.updateFlow();\n          }\n        }\n      })\n      .on(\"focus\", () => {});   // this is needed to get keydown events\n\n    // so we can resize the whole flow (future)\n    const svgGroup = this.svg.append('g').classed('zoom-group', true);\n\n    // wires and nodes layer groups\n    this.wires = svgGroup.append('g').classed('all-wires', true);\n    this.nodes = svgGroup.append('g').classed('all-nodes', true);\n\n    // line displayed when dragging new links\n    this.dragLine = svgGroup.append('path')\n      .attr('class', 'hidden flow-link')\n      .attr('d', 'M0,0L0,0');\n\n  }\n\n  private resetSelection() {\n    if (this.selectedLink) {\n      this.wires.select(`#${this.selectedLink}`)\n        .classed('selected', false)\n      this.selectedLink = null;\n    }\n    if (this.selectedNode) {\n      this.nodes.select(`#${this.selectedNode}`)\n        .classed('selected', false)\n      this.selectedNode = null;\n    }\n  }\n\n  private updateWires() {\n    // generate flowWires array to bind to wires\n    this.flowWires = [];\n    for(let flowNode of this.flow) {\n      for (let i=0; i < flowNode.wires.length; i++) {\n        for (let j in flowNode.wires[i]) {\n          this.flowWires.push({\n            fromNode: flowNode.id,\n            fromPort: i,\n            toNode: flowNode.wires[i][j]\n          });\n        }\n      }\n    }\n  }\n\n  private generatePath(wirePath) {\n    const sourceNode = this.nodes.select(`#node-${wirePath.fromNode}`);\n    let sourceX = sourceNode.node().getBBox().width;\n    sourceX = sourceNode.datum().x + sourceX;\n    let sourceY = sourceNode.datum().y + 15 + wirePath.fromPort * 15;\n    \n    const targetNode = this.nodes.select(`#node-${wirePath.toNode}`);\n    // all input nodes are in the same place\n    let targetX = targetNode.datum().x + 5;\n    let targetY = targetNode.datum().y + 15;\n    return `M ${sourceX} ${sourceY} C ${sourceX+50} ${sourceY}, ${targetX-50} ${targetY}, ${targetX},${targetY}`;\n  }\n\n  public updateFlow() {\n\n    const thisEditor = this;\n\n    const wireId = (d) => `wire-${d.fromNode}-${d.fromPort}-${d.toNode}`;\n\n    this.updateWires();\n\n    // draw nodes\n    let nodes = thisEditor.nodes.selectAll('g.node');\n\n    // bind node data to the selected nodes.  identify unique node by id.\n    nodes = nodes.data(thisEditor.flow, function (d) {\n      return d.id;\n    });\n\n    // draw any new nodes, selected using enter() call\n    let newNodes = nodes\n      .enter()\n      .append('g')\n      .classed('node', true)\n      .attr('transform', function (d) {\n        return `translate(${d.x},${d.y})`;\n      })\n      .attr('id', (d) => `node-${d.id}`)\n      .style('fill', function (d) {\n        return thisEditor.registry.getNode(d.type).color;\n      });\n    \n    // draw the rectangle, then save it for width adjustment\n    const nodeRect = newNodes\n      .append('rect')\n      .attr('width', 10)\n      .attr('height', (d) => {\n        const wires = d.wires?.length || 1;\n        return 15 + wires * 15;\n      })\n      .attr('x', 5) // for possible input connector\n      .attr('rx', 5)\n      .attr('ry', 5);\n\n    // draw the label in the node\n    const text = newNodes\n      .append('text')\n      .attr('x', 40)\n      .text((d) => d.name)\n      .attr('y', function (d) {\n        return this.parentNode.getBBox().height / 2 - 3;\n      })\n      .classed('label', true);\n\n    // adjust the rect width to contain the text\n    nodeRect.attr('width', function (d) {\n      return this.parentNode.getBBox().width + 20;\n    });\n\n    // draw an input connector if the node has one\n    newNodes\n      .filter((d) => thisEditor.registry.getNode(d.type).inputs)\n      .append('rect')\n      .attr('width', 10)\n      .attr('height', 10)\n      .attr('x', 0)\n      .attr('y', 10)\n      .attr('rx', 2)\n      .attr('ry', 2)\n      .classed('connector', true);\n\n    // draw all of the output connectors\n    newNodes.each(function (d) {\n      const node = d3.select(this);\n\n      // x location on the right\n      let x = node.node().getBBox().width;\n\n      // hack: adjust for when we've added an input node\n      x = thisEditor.registry.getNode(d.type).inputs ? x - 5 : x;\n\n      for (let i = 0; i < d.wires?.length; i++) {\n        let y = 10 + i * 15;\n        node\n          .append('rect')\n          .attr('width', 10)\n          .attr('height', 10)\n          .attr('x', x)\n          .attr('y', y)\n          .attr('rx', 2)\n          .attr('ry', 2)\n          .classed('connector', true)\n          .on('mousedown', function (event: any, d: any) {\n            // handle mousedown in a connector\n            event.stopPropagation();\n            // keep start of drag line\n            thisEditor.mouseDownNode = {\n              node: d,\n              port: i,\n              coords: { x:x+10+d.x, y:y+5+d.y }\n            }\n            thisEditor.dragLine.classed('hidden', false)\n          });\n      }\n    });\n\n    // draw icon area\n    const icon = newNodes.append('g').classed('icon', true);\n    icon.append('path').attr('d', function (d) {\n      return `M 30 1 L 30 ${this.parentNode.parentNode.getBBox().height - 1}`;\n    });\n\n    // add click and double click behaviours\n    let timer = null;\n    newNodes.on('click', function (event:any, d:any) {\n\n      // set node as selected\n      let clickedNode = d3.select(this);\n      thisEditor.resetSelection();\n      clickedNode.classed('selected', true);\n      thisEditor.selectedNode = clickedNode.attr('id');\n      event.stopPropagation();\n\n      // send a selected or config event to our listeners\n      if (timer) {\n        thisEditor.emit('configNode', d);\n        clearTimeout(timer);\n        timer = null;\n        return;\n      }\n      timer = setTimeout(function () {\n        thisEditor.emit('selectNode', d);\n        timer = null;\n      }, 200);\n    });\n\n    // add drag behaviour to the node\n    newNodes.call(\n      d3.drag().on('drag', function (event:any, d:any) {\n          // update node location in the data and on the screen\n          d.x = event.x;\n          d.y = event.y;\n          d3.select(this).attr('transform', `translate(${d.x}, ${d.y})`);\n\n          // find the paths that we're connected to, and move those as well.\n          for (let i in d.wires) {\n            for (let node of d.wires[i])\n              // outputWires.push(`wire-${d.id}-${i}-${node}`);\n              thisEditor.wires.select(`#wire-${d.id}-${i}-${node}`)\n                .attr('d', (d) => thisEditor.generatePath(d))\n          }\n\n          // find input wires and move those\n          let inputWires = thisEditor.flowWires.filter((wire) => wire.toNode === d.id)\n            .map((wire) => {\n              let id = wireId(wire);\n              thisEditor.wires.select(`#${id}`)\n                .attr('d', (d) => thisEditor.generatePath(d))\n            })\n      })\n    );\n\n    // add mouseup for when you drag a link to the node\n    // we currently allow you to mouseup on the node, not the connector\n    newNodes.on('mouseup', function (event: any, d: any) {\n      event.stopPropagation();\n      // add wire to index, then update flow\n      thisEditor.mouseDownNode.node.wires[thisEditor.mouseDownNode.port].push(d.id);\n      // hide the drag line\n      thisEditor.dragLine\n        .classed('hidden',true)\n        .attr('d', 'M0,0L0,0');\n      thisEditor.updateFlow();\n    });\n\n    \n    // remove nodes no longer there\n    nodes.exit().remove();\n\n    // now draw the links (wires)\n\n    // in the wires layer, select all paths\n    let wires = thisEditor.wires.selectAll('path');\n\n    // generate unique ids for each wire\n    wires = wires.data(this.flowWires, function (d) {\n      return wireId(d);\n    });\n\n    wires.enter()\n      .append('path')\n      .attr('d', (d) => {\n        return thisEditor.generatePath(d);\n      })\n      .attr('id', (d) => {\n        return wireId(d);\n      })\n      .classed('flow-link', true)\n      .on('click', function (event, d) {\n        thisEditor.resetSelection();\n        let link = d3.select(this);\n        thisEditor.selectedLink = link.attr('id');\n        link.classed('selected', true);\n        event.stopPropagation();\n      });\n    wires.exit().remove();\n  }\n\n  // generate a node id\n  private generateId() {\n    return (Math.floor(1 + Math.random() * 4294967295)).toString(16);\n  }\n\n  // called when node dropped into the flow from the pallette\n  addNode(type: any, x, y) {\n    const wires:[string[]?] = [];\n    for (let i = 0; i < this.registry.getNode(type).outputs; i++) {\n      wires.push([]);\n    }\n    const newNode = {\n      name: `new ${type} node`,\n      type: type,\n      id: this.generateId(),\n      x: x,\n      y: y,\n      wires,\n    };\n\n    this.flow.push(newNode);\n    this.updateFlow();\n  }\n\n  // called when configuration of node changed\n  updateNode(id: string, config: any) {\n    // find the node, change its config\n    this.updateFlow();\n  }\n}\n","import { css } from 'lit-element';\n\nexport const styles = css`\n  :host {\n    font-size: 14px;\n    font-family: \"Helvetica Neue\",Arial,Helvetica,sans-serif;\n    padding: 0;\n    margin: 0;\n    background: #f3f3f3;\n    color: #555;\n    line-height: 20px;\n  }`;","import { html, css, LitElement } from 'lit-element';\nimport d3 from './d3';\n\nimport { FlowEditor, Node } from './editor';\nimport { NodeRegistry } from './registry';\nimport { Flow } from './flow';\nimport { styles } from './styles';\n\nexport interface NodeEvent {\n  detail: Node\n}\n\nexport class FlowElement extends LitElement {\n\n  top = 0\n  left = 0\n\n  flow: Flow = null\n  flowEditor: FlowEditor = null\n  registry: NodeRegistry = null\n\n  svgElement\n\n  // For optimal performance, define scoped styles in a static styles property.\n  // Define styles in a tagged template literal, using the css tag function:\n  static get styles() {\n    return [styles, css`\n      .flow {\n        position: absolute;\n        margin: 0;\n        top: 0px;\n        left: 179px;\n        bottom: 0px;\n        right: 60px;\n        overflow: hidden;\n        border: 1px solid #bbb;\n        box-sizing: border-box;\n      }\n      .node {\n        fill: rgb(166, 187, 207);\n        stroke: #999;\n        cursor: move;\n        stroke-width: 2;\n      }\n      .connector {\n        fill: rgb(255,255,255);\n        stroke: #999;\n        stroke-width: 1;\n      }\n      .icon {\n        stroke-opacity: .1;\n        stroke: #000;\n        stroke-width: 1;\n      }\n      .label {\n        fill: #000;\n        stroke: none;\n        cursor: move;\n        stroke-width: 1px;\n        fill: black;\n        user-select: none;\n      }\n      .hidden {\n        display: none\n      }\n      .flow-link {\n        stroke: #999;\n        stroke-width: 3;\n        fill: none;\n        cursor: crosshair\n      }\n      .selected {\n        stroke: #ff7f0e;\n        stroke-width: 3\n      }\n      .flow svg:focus {\n        outline: none\n      }\n    `]\n  }\n\n  // Uses lit-html to render the element template. You must implement render for any component\n  // that extends the LitElement base class.\n  render() {\n    return html`\n      <div class=\"flow\">\n        <svg></svg>\n      </div>\n    `;\n  }\n\n  // called when node dropped on to the flow editor\n  dropNode(type:string, x:number, y:number) {\n    this.flowEditor.addNode(type, x - this.left, y - this.top)\n  }\n\n  // called to update the specified node with an updated configuration\n  updateNode(id, config) {\n    this.flowEditor.updateNode(id, config)\n  }\n\n  // event - node is double clicked\n  configEvent = (data: any) => {\n    this.dispatchEvent(new CustomEvent('configNode', {\n      detail: data\n    }))\n  }\n\n  // event - node is double clicked\n  selectEvent = (data: any) => {\n    this.dispatchEvent(new CustomEvent('selectNode', {\n      detail: data\n    }))\n  }\n\n  // Called after the element’s DOM has been updated the first time, immediately before updated is called.\n  // Use firstUpdated for initializing private fields from DOM attributes (as the constructor doesn’t have access to them).\n  // Note that render has already run at this point and your changes might trigger another update lifecycle.\n  firstUpdated() {\n    const svgDOM = this.shadowRoot.querySelector('svg');\n    this.svgElement = svgDOM;\n\n    // get our position so we can add nodes relative to the svg port\n    const rect = svgDOM.getBoundingClientRect();\n    this.top = rect.top;\n    this.left = rect.left;\n\n    // svg is a d3 selection\n    const svg = d3.select(svgDOM);\n\n    svg.attr('width', '100%')\n      .attr('height', '100%');\n\n    this.flowEditor = new FlowEditor(this.registry, svg);\n\n    // TODO: support tabs\n    this.flowEditor.init(this.flow.tabs[0].nodes);\n\n    // relay events from the editor to element listeners\n    this.flowEditor.on('configNode', this.configEvent);\n    this.flowEditor.on('selectNode', this.selectEvent);\n\n    // on update, we need to call this to update flow since we can't assume it's just re-rendered\n    this.flowEditor.updateFlow();\n  }\n}\n\n","import { html, css, LitElement, property } from 'lit-element'\nimport { NodeRegistry } from './registry'\nimport {styles} from './styles'\n\n// We use drag and drop with mouse EventSource\n// https://javascript.info/mouse-drag-and-drop\n\nconst NODE_SPACING = 10;\n\nexport interface DropEvent {\n    detail:{\n      type:string,\n      x: number,\n      y: number\n    }\n};\n\nexport class PalletteElement extends LitElement {\n\n  registry: NodeRegistry;\n  droppable;\n\n  @property({type: String})\n  dropSelector;\n\n  static get styles() {\n    return [\n      styles, css`\n      .pallette {\n        position: absolute;\n        top: 0px;\n        bottom: 0px;\n        left: 0px;\n        background: #f3f3f3;\n        width: 180px;\n        text-align: center;\n        user-select: none;\n        border: 1px solid #bbb;\n        box-sizing: border-box;\n        transition: width 0.2s ease-in-out;\n      }\n      .node {\n        cursor: move;\n        background: #fff;\n        margin: ${NODE_SPACING}px auto;\n        height: 25px;\n        border-radius: 5px;\n        border: 1px solid #999;\n        background-position: 5% 50%;\n        background-repeat: no-repeat;\n        width: 120px;\n        background-size: contain;\n        position: relative;\n      }\n      .label {\n        color: #333;\n        font-size: 13px;\n        margin: 4px 0 4px 32px;\n        line-height: 20px;\n        overflow: hidden;\n        text-align: center;\n        user-select: none;\n      }\n      .icon-container {\n        position: absolute;\n        text-align: center;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 30px;\n        border-right: 1px solid rgba(0,0,0,0.05);\n        background-color: rgba(0,0,0,0.05);\n      }\n      .icon {\n        display: inline-block;\n        width: 20px;\n        height: 100%;\n        background-position: 50% 50%;\n        background-size: contain;\n        background-repeat: no-repeat;\n      }\n      .port {\n        position: absolute;\n        top: 8px;\n        left: -5px;\n        box-sizing: border-box;\n        background: #FFFFFF;\n        border-radius: 3px;\n        width: 10px;\n        height: 10px;\n        border: 1px solid #999;\n      }\n      .port-output {\n        left: auto;\n        right: -6px;\n      }\n    `]\n  }\n\n  onMouseDown = (e) => {\n    this.droppable = null\n    let node = e.currentTarget\n\n    // where we clicked in the node\n    const shiftX = e.clientX - node.getBoundingClientRect().left;\n    const shiftY = e.clientY - node.getBoundingClientRect().top;\n\n    // make a copy to drag around\n    node = node.cloneNode(true)\n    this.shadowRoot.append(node)\n  \n    node.style.position = 'absolute'\n    node.style.zIndex = 1000\n\n    // drags the node where we clicked on it\n    function moveAt(pageX, pageY) {\n      node.style.left = pageX - shiftX + 'px';\n      node.style.top = pageY - shiftY - NODE_SPACING + 'px';  // 10 for margin\n    }\n\n    // move the node under the pointer\n    moveAt(e.pageX, e.pageY);\n\n    let currentDroppable = null\n\n    const onMouseMove = (event) => {\n      moveAt(event.pageX, event.pageY);\n\n      node.hidden = true;\n      let elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n      node.hidden = false;\n\n      // mousemove events may trigger out of the window (when the node is dragged off-screen)\n      // if clientX/clientY are out of the window, then elementFromPoint returns null\n      if (!elemBelow) return;\n\n      // we always drop into a flow-element that is below us\n      const droppableBelow = elemBelow.closest(this.dropSelector);\n      if (currentDroppable != droppableBelow) {\n        // we're flying in or out...\n        // note: both values can be null\n        //   currentDroppable=null if we were not over a droppable before this event (e.g over an empty space)\n        //   droppableBelow=null if we're not over a droppable now, during this event\n    \n        if (currentDroppable) {\n          // the logic to process \"flying out\" of the droppable (remove highlight)\n          console.log('leave drop selector')\n        }\n        currentDroppable = droppableBelow;\n        if (currentDroppable) {\n          // the logic to process \"flying in\" of the droppable\n          console.log('enter drop selector')\n          // save for mouseup\n          this.droppable = currentDroppable\n        }\n      }\n    }\n\n    // (2) move the node on mousemove\n    document.addEventListener('mousemove', onMouseMove);\n\n    // (3) drop the node, remove unneeded handlers\n    // call the component to handle the new element\n    node.onmouseup = (e) => {\n      document.removeEventListener('mousemove', onMouseMove);\n      node.onmouseup = null;\n      // remove the copy we used for drawing\n      node.parentNode.removeChild(node);\n      if (this.droppable) {\n        const left = parseInt(node.style.left, 10)\n        const top = parseInt(node.style.top, 10) + NODE_SPACING\n        const type = node.dataset.type\n        this.dispatchEvent(new CustomEvent('dropNode', {\n          detail:{\n            type,\n            x: left,\n            y: top\n          }\n        }))\n        this.droppable = null\n      }\n    };\n  }\n\n  render() {\n    const types = this.registry.getTypes()\n    return html`<div class=\"pallette\">\n      ${types.map(type => html`\n        <div class=\"node ui-draggable ui-draggable-handle\" @mousedown=${this.onMouseDown}\n          data-type=\"${type.type}\" style=\"background-color: ${type.color}; height: 28px;\">\n          <div class=\"label\" dir=\"\">${type.type}</div>\n          <div class=\"icon-container\">\n            <div class=\"icon\" style=\"background-image: url(&quot;icons/${type.icon}&quot;);\"></div>\n          </div>\n          ${type.outputs ? html`<div class=\"port port-output\" style=\"top: 9px;\"></div>`:''}\n          ${type.inputs ? html`<div class=\"port\" style=\"top: 9px;\"></div>`:''}\n        </div>`)}\n      </div>`\n  }\n}\n\n","\nexport interface NodeType {\n  type:string\n  icon:string\n  defaults: any\n  color: string\n  inputs: number\n  outputs: number\n}\n\nexport class NodeRegistry {\n\n  types: Map<string, NodeType>\n\n  constructor() {\n    this.types = new Map<string, NodeType>()\n  }\n\n  register(nodeType: NodeType) {\n    if (this.types[nodeType.type]) {\n      throw new Error('type already registered')\n    }\n    this.types.set(nodeType.type, nodeType);\n  }\n\n  getNode(type: string):NodeType {\n    return this.types.get(type);\n  }\n\n  getTypes() {\n    return Array.from<NodeType>(this.types.values())\n  }\n}\n\n","import { html, css, LitElement } from 'lit-element'\nimport { NodeRegistry } from './registry'\nimport {styles} from './styles'\n\nexport class ConfigElement extends LitElement {\n\n  registry: NodeRegistry\n\n  static get styles() {\n    return [\n      styles, css`\n      .config {\n        position: absolute;\n        margin: 0;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        width: 61px;\n        overflow: hidden;\n        border: 1px solid #bbb;\n        box-sizing: border-box;\n        transition: left 0.1s ease-in-out;\n      }\n      .content {\n        margin: 10px\n      }\n    `]\n  }\n\n  constructor() {\n    super()\n  }\n\n  render() {\n    const types = this.registry.getTypes()\n    return html`<div class=\"config\">\n      <p class=\"content\">TODO</p>\n      </div>`\n  }\n}\n\n","import { Flow } from './flow'\nimport { html, render } from 'lit-html'\nimport { FlowElement, NodeEvent } from './flow-element'\nimport { PalletteElement, DropEvent } from './pallette-element'\nimport { NodeType, NodeRegistry } from './registry'\nimport { ConfigElement } from './config-element'\n\nwindow.customElements.define('flow-element', FlowElement)\nwindow.customElements.define('pallette-element', PalletteElement)\nwindow.customElements.define('config-element', ConfigElement)\n\n// get flow element for relaying event\nlet flowElement = null\nwindow.addEventListener('DOMContentLoaded', () => {\n  flowElement = document.querySelector('flow-element') as FlowElement\n});\n\n// test fixtures from the servers\nconst testTypes:NodeType[] = [\n  {\n    type:'inject',\n    icon:'inject.png',\n    color:'lightgray',\n    defaults: {},\n    inputs: 0,\n    outputs: 1\n  },\n  {\n    type:'debug',\n    icon:'debug.png',\n    color:'lightgreen',\n    defaults: {},\n    inputs: 1,\n    outputs: 0\n  },\n  {\n    type:'splitter',\n    icon:'split.png',\n    color:'beige',\n    defaults: {},\n    inputs: 1,\n    outputs: 4\n  }\n]\n\nconst testFlow:Flow = {\n  tabs:[{\n    name: 'test tab',\n    nodes:[      {\n      id: 'a',\n      type: 'splitter',\n      name: 'first node',\n      x: 100,\n      y: 100,\n      wires: [['b','c']]\n    },\n    {\n      id: 'b',\n      type: 'debug',\n      name: 'second debug',\n      x: 250,\n      y: 150,\n      wires: []\n    },\n    {\n      id: 'c',\n      type: 'splitter',\n      name: 'second splitter',\n      x: 100,\n      y: 300,\n      wires: []\n    },\n  ]\n  }]\n}\n\nconst registry = new NodeRegistry()\ntestTypes.forEach(type => registry.register(type))\n\nrender(\n  html`\n    <pallette-element .registry=${registry} dropSelector=\"flow-element\"\n      @dropNode=${(e: DropEvent) => flowElement.dropNode(e.detail.type, e.detail.x, e.detail.y)}></pallette-element>\n    <flow-element .flow=${testFlow} .registry=${registry}\n      @configNode=${(e: NodeEvent) => console.log(`config ${e.detail.id}`)}\n      @selectNode=${e => console.log(`select ${e.detail.id}`)}></flow-element>\n    <config-element .registry=${registry}></config-element>\n    `,\n  document.querySelector('#demo'));"]}